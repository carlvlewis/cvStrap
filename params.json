{"name":"cvStrap","tagline":"cvStrap is a classic, clean, professional theme for the JSONResume schema with print-ready and responsive stylesheets, based on Bootstrap 2.0","body":"### Getting started with cvStrap\r\nUpdating your CV/resume in an opinionated design environment pixel-by-pixel can get tedious. So, what better way to maintain your professional narrative than editing the simplest, most ubiquitous data format on the web, JSON? Using the [JSONResume](http://jsonresume.org) schema, an initiative to create a JSON-based standard for resumes, and its command line interface tools, you can choose from dozens of [gorgeous HTML themes in the registry](http://registry.jsonresume.org/) and export your resume.json file located in your home directory to PDF using one simple command (that is, as soon as you've installed the command line tool as detailed [here](https://github.com/jsonresume/resume-cli).) After you've installed the -cli via NPM, simply run the command:\r\n\r\n    $ resume export publish\r\n\r\nIf you want to implement the cvStrap theme that way, all you have to do is run one other command defining the theme you want to run.\r\n\r\n    $ resume export --theme cvStrap\r\n\r\nAnd then boom, your new HTML or PDF cvStrapped resume will be available in your current working directory.\r\n\r\n### Why cvStrap?\r\n\r\nThe themes that fit my design specifications all required exact dates (of which I'm not aware) in the dd-mm-yyyy format. Otherwise, the [-cli](https://github.com/jsonresume/resume-cli) wouldn't export them to HTML or PDF in the command line as it should, spitting back errors because the date formatting varied from the schema. Moreover, few, if any, had clearly defined, succinct print stylesheets. Although in developer circles, printing may be a thing of the past, I'm a developer in the *news* industry – which is still **very much** attached to the notion of having print copies of a candidate's resume.\r\n\r\nSo, hence the inspiration was born to create my JSONResume-schema powered, Boostrap-based [full academic CV](http://cv.carlvlewis.net). Resize the browser window, print it, download it, do whatever--it all comes out gorgeously with page-breaks and navigation-buttons hidden. All URL indicators in the CSS have been disabled except when in a:hover state so that the HTML will look as close to the printed copy as possible.\r\n\r\n### Automagically exporting your LinkedIn profile into the JSON Resume schema:\r\n\r\nLooking for a fast way to get your data into JSON? José Manuel Pérez's created a nifty [LinkedIn to JSONResume converter](http://jmperezperez.com/linkedin-to-json-resume/) that I used.\r\n\r\n### Changing the order/appearance of cvStrap\r\n\r\nYou're free to restructure the order of the elements in the /json/resume.json file, so long as you do the same in the accompanying /json/schema.json file as well. You won't be able to run it in the command line but it'll still get the job done.\r\n\r\n### Credits\r\nDesign and implementation by @carlvlewis. Kudos also to @jmperez for the Linkedin-to-JSONResume generator.\r\n\r\n### Support or Contact\r\nHaving trouble with cvStrap? Shoot me an email at hello@carlvlew.is.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}